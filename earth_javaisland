pip install geopandas

# Commented out IPython magic to ensure Python compatibility.
#Importing the required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
import geopandas as gpd
from descartes import PolygonPatch
# %matplotlib inline
from matplotlib.pylab import rcParams

#import the required dataset
df_full = pd.read_csv("Data gempa bumi pulau jawa.csv")
df_full.head()

df_full['Date'] = pd.to_datetime(df_full['Date'],  errors='coerce')
# only keeping the columns we require
df = df_full[['Latitude','Longitude','Magnitudo']]
df_year = df_full[['Latitude','Longitude','Magnitudo','Date']]
# only keeping earthquake categorized as moderate
df = df[df.Magnitudo >= 3]
df_year = df_year[df_year.Magnitudo >= 3]
len(df_year),len(df)

#Finding the optimal K using the elbow method
Sum_of_squared_distances = []
K = range(1,10)
for k in K:
    km = KMeans(n_clusters=k)
    km = km.fit(df)    
    Sum_of_squared_distances.append(km.inertia_)

plt.plot(K, Sum_of_squared_distances, 'rx-')

kmeans = KMeans(n_clusters=2).fit(df)
df['Clusters'] = kmeans.labels_

map_1 = gpd.read_file('batas_kab.shp')

#find the centroid location
centroid_1, centroid_2 = kmeans.cluster_centers_
centroid_1 = np.delete(centroid_1,2)
centroid_2 = np.delete(centroid_2,2)

params={'figure.figsize':(15,12)}
rcParams.update(params)

map_1.plot(column = 'PROPINSI')
sns.scatterplot(x=df.Longitude, y=df.Latitude, hue = df.Clusters ,palette='Set1',
                size=df.Magnitudo, sizes=(10,200), 
                    legend = 'brief')
plt.legend(loc=2, bbox_to_anchor=(0.80,1.30))

plt.scatter(centroid_1[1],centroid_1[0],color="yellow")
plt.scatter(centroid_2[1],centroid_2[0],color="yellow")
plt.axis('off')
plt.show()
plt.savefig("earthquake_clusters_1.png", dpi=200)

df_2018 = df_full[(df_full['Date'].dt.year == 2018) & (df_full['Magnitudo']>=3)]

df_2019 = df_full[(df_full['Date'].dt.year == 2019) & (df_full['Magnitudo']>=3)]

df_2020 = df_full[(df_full['Date'].dt.year > 2020) & (df_full['Magnitudo']>=3)]

#Defining the location for April 8th 2019 earthquake
may_22_location = [110.78,-6.69]

map_1.plot(column = 'DATA')

plt.scatter(df_2018.Longitude, df_2018.Latitude,20,color='cyan',
            label="2018")
plt.scatter(df_2019.Longitude, df_2019.Latitude,20,label="2019",
            color='orange')
plt.scatter(df_2020.Longitude, df_2020.Latitude,20,label = "2020",
            color='purple')
plt.scatter(may_22_location[0],may_22_location[1],20,color='black',
            alpha=1, label="May 22 epicenter")

plt.legend(loc=2, bbox_to_anchor=(0.80,1.30))

plt.axis('Off')
plt.show()
plt.savefig("earthquake_clusters_2.png", dpi=200)
